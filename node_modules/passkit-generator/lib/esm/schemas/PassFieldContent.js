import Joi from "joi";
import { Semantics } from "./Semantics.js";
export const PassFieldContent = Joi.object().keys({
    attributedValue: Joi.alternatives(Joi.string().allow(""), Joi.number(), Joi.date().iso()),
    changeMessage: Joi.string(),
    dataDetectorTypes: Joi.array().items(Joi.string().regex(/(PKDataDetectorTypePhoneNumber|PKDataDetectorTypeLink|PKDataDetectorTypeAddress|PKDataDetectorTypeCalendarEvent)/, "dataDetectorType")),
    label: Joi.string().allow(""),
    textAlignment: Joi.string().regex(/(PKTextAlignmentLeft|PKTextAlignmentCenter|PKTextAlignmentRight|PKTextAlignmentNatural)/, "graphic-alignment"),
    key: Joi.string().required(),
    value: Joi.alternatives(Joi.string().allow(""), Joi.number(), Joi.date().iso()).required(),
    semantics: Semantics,
    // date fields formatters, all optionals
    dateStyle: Joi.string().regex(/(PKDateStyleNone|PKDateStyleShort|PKDateStyleMedium|PKDateStyleLong|PKDateStyleFull)/, "date style"),
    ignoresTimeZone: Joi.boolean(),
    isRelative: Joi.boolean(),
    timeStyle: Joi.string().regex(/(PKDateStyleNone|PKDateStyleShort|PKDateStyleMedium|PKDateStyleLong|PKDateStyleFull)/, "date style"),
    // number fields formatters, all optionals
    currencyCode: Joi.string().when("value", {
        is: Joi.number(),
        otherwise: Joi.string().forbidden(),
    }),
    numberStyle: Joi.string()
        .regex(/(PKNumberStyleDecimal|PKNumberStylePercent|PKNumberStyleScientific|PKNumberStyleSpellOut)/)
        .when("value", {
        is: Joi.number(),
        otherwise: Joi.string().forbidden(),
    }),
});
/**
 * @deprecated Use `PassFieldContent` instead,
 * which is the right Apple name.
 */
export const Field = PassFieldContent;
export const PassFieldContentWithRow = PassFieldContent.concat(Joi.object().keys({
    row: Joi.number().min(0).max(1),
}));
/**
 * @deprecated Use `PassFieldContentWithRow` instead,
 * which is the right Apple name.
 */
export const FieldWithRow = PassFieldContentWithRow;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFzc0ZpZWxkQ29udGVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY2hlbWFzL1Bhc3NGaWVsZENvbnRlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxHQUFHLE1BQU0sS0FBSyxDQUFDO0FBQ3RCLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQWdFM0MsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBb0IsQ0FBQyxJQUFJLENBQUM7SUFDbkUsZUFBZSxFQUFFLEdBQUcsQ0FBQyxZQUFZLENBQ2hDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEVBQ3RCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsRUFDWixHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLENBQ2hCO0lBQ0QsYUFBYSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUU7SUFDM0IsaUJBQWlCLEVBQUUsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDLEtBQUssQ0FDbkMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FDakIsa0hBQWtILEVBQ2xILGtCQUFrQixDQUNsQixDQUNEO0lBQ0QsS0FBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO0lBQzdCLGFBQWEsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUNoQyx5RkFBeUYsRUFDekYsbUJBQW1CLENBQ25CO0lBQ0QsR0FBRyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDNUIsS0FBSyxFQUFFLEdBQUcsQ0FBQyxZQUFZLENBQ3RCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEVBQ3RCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsRUFDWixHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLENBQ2hCLENBQUMsUUFBUSxFQUFFO0lBQ1osU0FBUyxFQUFFLFNBQVM7SUFDcEIsd0NBQXdDO0lBQ3hDLFNBQVMsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUM1QixzRkFBc0YsRUFDdEYsWUFBWSxDQUNaO0lBQ0QsZUFBZSxFQUFFLEdBQUcsQ0FBQyxPQUFPLEVBQUU7SUFDOUIsVUFBVSxFQUFFLEdBQUcsQ0FBQyxPQUFPLEVBQUU7SUFDekIsU0FBUyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLENBQzVCLHNGQUFzRixFQUN0RixZQUFZLENBQ1o7SUFDRCwwQ0FBMEM7SUFDMUMsWUFBWSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO1FBQ3hDLEVBQUUsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFO1FBQ2hCLFNBQVMsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsU0FBUyxFQUFFO0tBQ25DLENBQUM7SUFDRixXQUFXLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRTtTQUN2QixLQUFLLENBQ0wsMkZBQTJGLENBQzNGO1NBQ0EsSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUNkLEVBQUUsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFO1FBQ2hCLFNBQVMsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsU0FBUyxFQUFFO0tBQ25DLENBQUM7Q0FDSCxDQUFDLENBQUM7QUFFSDs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsZ0JBQWdCLENBQUM7QUFFdEMsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxDQUM3RCxHQUFHLENBQUMsTUFBTSxFQUEyQixDQUFDLElBQUksQ0FBQztJQUMxQyxHQUFHLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0NBQy9CLENBQUMsQ0FDRixDQUFDO0FBRUY7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLHVCQUF1QixDQUFDIn0=